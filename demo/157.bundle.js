"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[157],{157:(e,t,r)=>{r.r(t),r.d(t,{DRACOLoader:()=>i});var s=r(412);const o=new WeakMap;class i extends s.Loader{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,r,o){const i=new s.FileLoader(this.manager);i.setPath(this.path),i.setResponseType("arraybuffer"),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(e=>{const r={attributeIDs:this.defaultAttributeIDs,attributeTypes:this.defaultAttributeTypes,useUniqueIDs:!1};this.decodeGeometry(e,r).then(t).catch(o)}),r,o)}decodeDracoFile(e,t,r,s){const o={attributeIDs:r||this.defaultAttributeIDs,attributeTypes:s||this.defaultAttributeTypes,useUniqueIDs:!!r};this.decodeGeometry(e,o).then(t)}decodeGeometry(e,t){for(const e in t.attributeTypes){const r=t.attributeTypes[e];void 0!==r.BYTES_PER_ELEMENT&&(t.attributeTypes[e]=r.name)}const r=JSON.stringify(t);if(o.has(e)){const t=o.get(e);if(t.key===r)return t.promise;if(0===e.byteLength)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let s;const i=this.workerNextTaskID++,n=e.byteLength,a=this._getWorker(i,n).then((r=>(s=r,new Promise(((r,o)=>{s._callbacks[i]={resolve:r,reject:o},s.postMessage({type:"decode",id:i,taskConfig:t,buffer:e},[e])}))))).then((e=>this._createGeometry(e.geometry)));return a.catch((()=>!0)).then((()=>{s&&i&&this._releaseTask(s,i)})),o.set(e,{key:r,promise:a}),a}_createGeometry(e){const t=new s.BufferGeometry;e.index&&t.setIndex(new s.BufferAttribute(e.index.array,1));for(let r=0;r<e.attributes.length;r++){const o=e.attributes[r],i=o.name,n=o.array,a=o.itemSize;t.setAttribute(i,new s.BufferAttribute(n,a))}return t}_loadLibrary(e,t){const r=new s.FileLoader(this.manager);return r.setPath(this.decoderPath),r.setResponseType(t),r.setWithCredentials(this.withCredentials),new Promise(((t,s)=>{r.load(e,t,void 0,s)}))}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e="object"!=typeof WebAssembly||"js"===this.decoderConfig.type,t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then((t=>{const r=t[0];e||(this.decoderConfig.wasmBinary=t[1]);const s=n.toString(),o=["/* draco decoder */",r,"","/* worker */",s.substring(s.indexOf("{")+1,s.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([o]))})),this.decoderPending}_getWorker(e,t){return this._initDecoder().then((()=>{if(this.workerPool.length<this.workerLimit){const e=new Worker(this.workerSourceURL);e._callbacks={},e._taskCosts={},e._taskLoad=0,e.postMessage({type:"init",decoderConfig:this.decoderConfig}),e.onmessage=function(t){const r=t.data;switch(r.type){case"decode":e._callbacks[r.id].resolve(r);break;case"error":e._callbacks[r.id].reject(r);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+r.type+'"')}},this.workerPool.push(e)}else this.workerPool.sort((function(e,t){return e._taskLoad>t._taskLoad?-1:1}));const r=this.workerPool[this.workerPool.length-1];return r._taskCosts[e]=t,r._taskLoad+=t,r}))}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}debug(){console.log("Task load: ",this.workerPool.map((e=>e._taskLoad)))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this}}function n(){let e,t;function r(e,t,r,s,o,i){const n=i.num_components(),a=r.num_points()*n,d=a*o.BYTES_PER_ELEMENT,c=function(e,t){switch(t){case Float32Array:return e.DT_FLOAT32;case Int8Array:return e.DT_INT8;case Int16Array:return e.DT_INT16;case Int32Array:return e.DT_INT32;case Uint8Array:return e.DT_UINT8;case Uint16Array:return e.DT_UINT16;case Uint32Array:return e.DT_UINT32}}(e,o),u=e._malloc(d);t.GetAttributeDataArrayForAllPoints(r,i,c,d,u);const l=new o(e.HEAPF32.buffer,u,a).slice();return e._free(u),{name:s,array:l,itemSize:n}}onmessage=function(s){const o=s.data;switch(o.type){case"init":e=o.decoderConfig,t=new Promise((function(t){e.onModuleLoaded=function(e){t({draco:e})},DracoDecoderModule(e)}));break;case"decode":const s=o.buffer,i=o.taskConfig;t.then((e=>{const t=e.draco,n=new t.Decoder,a=new t.DecoderBuffer;a.Init(new Int8Array(s),s.byteLength);try{const e=function(e,t,s,o){const i=o.attributeIDs,n=o.attributeTypes;let a,d;const c=t.GetEncodedGeometryType(s);if(c===e.TRIANGULAR_MESH)a=new e.Mesh,d=t.DecodeBufferToMesh(s,a);else{if(c!==e.POINT_CLOUD)throw new Error("THREE.DRACOLoader: Unexpected geometry type.");a=new e.PointCloud,d=t.DecodeBufferToPointCloud(s,a)}if(!d.ok()||0===a.ptr)throw new Error("THREE.DRACOLoader: Decoding failed: "+d.error_msg());const u={index:null,attributes:[]};for(const s in i){const d=self[n[s]];let c,l;if(o.useUniqueIDs)l=i[s],c=t.GetAttributeByUniqueId(a,l);else{if(l=t.GetAttributeId(a,e[i[s]]),-1===l)continue;c=t.GetAttribute(a,l)}u.attributes.push(r(e,t,a,s,d,c))}return c===e.TRIANGULAR_MESH&&(u.index=function(e,t,r){const s=3*r.num_faces(),o=4*s,i=e._malloc(o);t.GetTrianglesUInt32Array(r,o,i);const n=new Uint32Array(e.HEAPF32.buffer,i,s).slice();return e._free(i),{array:n,itemSize:1}}(e,t,a)),e.destroy(a),u}(t,n,a,i),s=e.attributes.map((e=>e.array.buffer));e.index&&s.push(e.index.array.buffer),self.postMessage({type:"decode",id:o.id,geometry:e},s)}catch(e){console.error(e),self.postMessage({type:"error",id:o.id,error:e.message})}finally{t.destroy(a),t.destroy(n)}}))}}}}}]);